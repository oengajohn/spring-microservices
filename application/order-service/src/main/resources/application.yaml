spring:
  datasource:
    username: root
    url: jdbc:mysql://localhost:3307/springmicroservices
    password: Ur@$2022
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  application:
    name: order-service
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: 'event:io.jotech.orderservice.event.OrderPlacedEvent'
    template:
      default-topic: notificationTopic


server:
  port: 8081
eureka:
  client:
    enabled: true
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
management:
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'
# Resilience4j properties
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        sliding-window-type: count_based
        sliding-window-size: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
  # Resilience4j Timeout properties
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s
  # Retry properties
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s


